# https://fluxcd.io/flux/components/helm/helmreleases/
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: victoria-metrics-k8s-stack
  namespace: monitoring
spec:
  install:
    crds: CreateReplace
    replace: true
  releaseName: victoria-metrics-k8s-stack
  interval: 30m
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      sourceRef:
        kind: HelmRepository
        name: victoria-metrics
        namespace: flux-system
      version: "0.50.*"
      interval: 12h
  # https://github.com/VictoriaMetrics/helm-charts/tree/master/charts/victoria-metrics-k8s-stack
  values:
    nameOverride: vmks # avoid hitting resource name limits of 63 characters
    # -- Tenant to use for Grafana datasources and remote write
    # Grafana Datasource: `http://vmselect-victoriametrics-vmks:8481/select/0/prometheus`
    # remote write: `http://vminsert-victoriametrics-vmks:8480/insert/0/prometheus/api/v1/write`
    tenant: "0"

    # -- VictoriaMetrics Operator dependency chart configuration. More values can be found [here](https://docs.victoriametrics.com/helm/victoriametrics-operator#parameters). Also checkout [here](https://docs.victoriametrics.com/operator/configuration/#environment-variables) possible ENV variables to configure operator behaviour
    # https://github.com/VictoriaMetrics/helm-charts/blob/master/charts/victoria-metrics-operator/values.yaml
    victoria-metrics-operator:
      enabled: true
      nameOverride: vmks-operator # shorten resource name
      serviceMonitor:
        enabled: true
        # -- Creates `VMServiceScrape` if `true` and `ServiceMonitor` otherwise.
        vm: true
      operator:
        # -- By default, operator converts prometheus-operator objects.
        disable_prometheus_converter: false
        # -- Compare-options and sync-options for prometheus objects converted by operator for properly use with ArgoCD
        prometheus_converter_add_argocd_ignore_annotations: false
        # Enables ownership reference for converted prometheus-operator objects, it will remove corresponding victoria-metrics objects in case of deletion prometheus one.
        enable_converter_ownership: true

    kube-state-metrics:
      enabled: true
    vmagent:
      # vmagent collects metrics from targets and sends them to a remote storage
      enabled: true
      # spec for VMAgent crd
      # https://docs.victoriametrics.com/operator/api.html#vmagentspec
      spec:
        # https://docs.victoriametrics.com/operator/api.html#vmagentremotewritespec
        remoteWrite:
        - url: https://prometheus.writefor.fun/api/v1/write
          tlsConfig:
            caFile: /data/ca-certs/ca.crt
        selectAllByDefault: true
        scrapeInterval: 20s
        externalLabels:
          # For multi-cluster setups it is useful to use "cluster" label to identify the metrics source.
          type: kubernetes
        extraArgs:
          # vmagent automatically switches to VictoriaMetrics remote write protocol when it sends data to VictoriaMetrics components
          remoteWrite.forceVMProto: "true"
          remoteWrite.vmProtoCompressLevel: "5" # -22 ~ 22, default to 0

          promscrape.streamParse: "true"
          # Do not store original labels in vmagent's memory by default. This reduces the amount of memory used by vmagent
          # but makes vmagent debugging UI less informative. See: https://docs.victoriametrics.com/vmagent/#relabel-debug
          promscrape.dropOriginalLabels: "false"
        # https://docs.victoriametrics.com/victoriametrics/#relabeling
        globalScrapeMetricRelabelConfigs:
          # Drop all unused/duplicate labels to avoid excessive label cardinality.
          # This is a best practice for performance.
          - action: labeldrop
            regex: "beta_kubernetes_io_(.+)"
          - action: labeldrop
            regex: "failure_domain_(.+)"
          - action: labeldrop
            regex: "prometheus"
        volumes: &volumes
          - name: ca-certs
            secret:
              secretName: ca-certs
        volumeMounts: &volumeMounts
          - name: ca-certs
            mountPath: /data/ca-certs
            readOnly: true
      ingress:
        enabled: false
        ingressClassName: kong

    # ================================================================
    # Disabled components
    # ================================================================

    prometheus-node-exporter:
      # instead of deploy node-exporter as pods, we do this via nixos module.
      enabled: false

    # Since we store metrics in a remote prometheus via remote write,
    # we don't need to store & query metrics in VictoriaMetrics. so disable all components here.
    grafana:
      enabled: false
    vmalert:
      # vmalert is a Prometheus-compatible alertmanager
      enabled: false
    alertmanager:
      enabled: false
    vmsingle:
      # Single-node VictoriaMetrics for storing metrics.
      # https://docs.victoriametrics.com/faq/#which-victoriametrics-type-is-recommended-for-use-in-production---single-node-or-cluster
      # vmsingle = vmcluster(vmselect + vmstorage + vminsert)
      enabled: false
